{"ast":null,"code":"import _slicedToArray from \"C:\\\\repository\\\\react-weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\repository\\\\react-weather-app\\\\src\\\\Forecast.js\";\nimport React, { useState } from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nexport default function Forecast(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      forecast = _useState4[0],\n      setForecast = _useState4[1];\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Forecast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \" Mon\"), /*#__PURE__*/React.createElement(WeatherIcon, {\n      code: \"01d\",\n      size: 48,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"forecast-temps\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"forecast-temps-max\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, \"19\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"forecast-temps-min\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, \"10\")))));\n  } else {\n    var apiKey = \"c0d89ac9b3417fc5f06ed2c347a7a787\";\n    var lat = props.coordinates.lat;\n    var lon = props.coordinates.lon;\n    var apiUrl = \"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/repository/react-weather-app/src/Forecast.js"],"names":["React","useState","WeatherIcon","axios","Forecast","props","loaded","setLoaded","forecast","setForecast","handleResponse","response","data","daily","apiKey","lat","coordinates","lon","apiUrl","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,kBAA4BJ,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAgCN,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAGD,MAAID,MAAJ,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,KAAlB;AAAwB,MAAA,IAAI,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAHJ,CADJ,CADJ,CADJ;AAeH,GAhBD,MAgBO;AACH,QAAIQ,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAGV,KAAK,CAACW,WAAN,CAAkBD,GAA5B;AACA,QAAIE,GAAG,GAAGZ,KAAK,CAACW,WAAN,CAAkBC,GAA5B;AACA,QAAIC,MAAM,iEAA0DH,GAA1D,kBAAqEE,GAArE,oBAAkFH,MAAlF,kBAAV;AAEAX,IAAAA,KAAK,CAACgB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBV,cAAvB;AAEA,WAAO,IAAP;AAEH;AAGJ","sourcesContent":["import React, { useState } from \"react\";\r\nimport WeatherIcon from \"./WeatherIcon\";\r\nimport \"./Forecast.css\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Forecast(props) {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [forecast, setForecast] = useState(null);\r\n\r\n\r\n    function handleResponse(response) {\r\n        setForecast(response.data.daily);\r\n        setLoaded(true);\r\n    }\r\n\r\n\r\n    if (loaded) {\r\n        return (\r\n            <div className=\"Forecast\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <div className=\"forecast-day\"> Mon</div>\r\n                        <WeatherIcon code=\"01d\" size={48}/>\r\n                        <div className=\"forecast-temps\">\r\n                            <span className=\"forecast-temps-max\">19</span>\r\n                            <span className=\"forecast-temps-min\">10</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        let apiKey = \"c0d89ac9b3417fc5f06ed2c347a7a787\";\r\n        let lat = props.coordinates.lat;\r\n        let lon = props.coordinates.lon;\r\n        let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n\r\n        axios.get(apiUrl).then(handleResponse);\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}