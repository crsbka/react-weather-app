{"ast":null,"code":"import _slicedToArray from \"C:\\\\repository\\\\react-weather-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\repository\\\\react-weather-app\\\\src\\\\Forecast.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport axios from \"axios\";\nimport ForecastDay from \"./ForecastDay\";\nexport default function Forecast(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      forecast = _useState4[0],\n      setForecast = _useState4[1];\n\n  useEffect(function () {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Forecast\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, forecast.map(function (dailyForecast, index) {\n      if (index < 5) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ForecastDay, {\n          data: dailyForecast,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 37\n          }\n        }));\n      }\n    })));\n  } else {\n    var apiKey = \"c0d89ac9b3417fc5f06ed2c347a7a787\";\n    var lat = props.coordinates.lat;\n    var lon = props.coordinates.lon;\n    var apiUrl = \"https://api.openweathermap.org/data/2.5/onecall?lat=\".concat(lat, \"&lon=\").concat(lon, \"&appid=\").concat(apiKey, \"&units=metric\");\n    axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}","map":{"version":3,"sources":["C:/repository/react-weather-app/src/Forecast.js"],"names":["React","useState","useEffect","axios","ForecastDay","Forecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","lat","lon","apiUrl","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,kBAA4BL,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOM,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAgCP,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,WAAjB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAGD,MAAID,MAAJ,EAAY;AACR,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC1C,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACX,4BACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,GAAG,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAED,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;AACJ,KARA,CAFL,CADJ,CADJ;AAiBH,GAlBD,MAkBO;AACH,QAAIE,MAAM,GAAG,kCAAb;AACA,QAAIC,GAAG,GAAGd,KAAK,CAACK,WAAN,CAAkBS,GAA5B;AACA,QAAIC,GAAG,GAAGf,KAAK,CAACK,WAAN,CAAkBU,GAA5B;AACA,QAAIC,MAAM,iEAA0DF,GAA1D,kBAAqEC,GAArE,oBAAkFF,MAAlF,kBAAV;AAEAhB,IAAAA,KAAK,CAACoB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBZ,cAAvB;AAEA,WAAO,IAAP;AAEH;AAGJ","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./Forecast.css\";\r\nimport axios from \"axios\";\r\nimport ForecastDay from \"./ForecastDay\";\r\n\r\nexport default function Forecast(props) {\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [forecast, setForecast] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoaded(false);\r\n    }, [props.coordinates]);\r\n\r\n    function handleResponse(response) {\r\n        setForecast(response.data.daily);\r\n        setLoaded(true);\r\n    }\r\n\r\n\r\n    if (loaded) {\r\n        return (\r\n            <div className=\"Forecast\">\r\n                <div className=\"row\">\r\n\r\n                    {forecast.map(function (dailyForecast, index) {\r\n                        if (index < 5) {\r\n                            return (\r\n                                <div className=\"col\" key={index}>\r\n                                    <ForecastDay data={dailyForecast}/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        let apiKey = \"c0d89ac9b3417fc5f06ed2c347a7a787\";\r\n        let lat = props.coordinates.lat;\r\n        let lon = props.coordinates.lon;\r\n        let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`;\r\n\r\n        axios.get(apiUrl).then(handleResponse);\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}